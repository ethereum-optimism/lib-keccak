version: 2.1


executors:
  default:
    docker:
      - image: us-docker.pkg.dev/oplabs-tools-artifacts/images/ci-builder:v0.47.3
  rust:
    docker:
      - image: cimg/rust:1.75.0 # CircleCI's Rust Docker image
    working_directory: ~/project


jobs:
  cargo-tests:
    executor: default
    environment:
      CARGO_TERM_COLOR: always
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - rust-cache-v1-{{ checksum "Cargo.lock" }}
            - rust-cache-v1-
      - checkout
      - run:
          name: Generate testdata
          command: just testdata
      - run:
          name: Run fuzz tests
          command: cargo run --release -- -m 100 -t 4 --diff-count 50000
          no_output_timeout: 20m
      - save_cache:
          key: rust-cache-v1-{{ checksum "Cargo.lock" }}
          paths:
            - ~/.cargo
            - target
  
  cargo-lint:
    executor: default
    environment:
      CARGO_TERM_COLOR: always
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - rust-cache-v1-{{ checksum "Cargo.lock" }}
            - rust-cache-v1-
      - run:
          name: Check formatting
          command: cargo fmt --all -- --check
      - run:
          name: Run clippy
          command: cargo clippy --workspace --all --locked -- -D warnings
      - save_cache:
          key: rust-cache-v1-{{ checksum "Cargo.lock" }}
          paths:
            - ~/.cargo
            - target

  cargo-build:
    executor: default
    environment:
      CARGO_TERM_COLOR: always
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - rust-cache-v1-{{ checksum "Cargo.lock" }}
            - rust-cache-v1-
      - run:
          name: Build project
          command: cargo build --workspace --all --locked
          no_output_timeout: 20m
      - save_cache:
          key: rust-cache-v1-{{ checksum "Cargo.lock" }}
          paths:
            - ~/.cargo
            - target

  foundry-check:
    executor: default
    environment:
      FOUNDRY_PROFILE: ci
    steps:
      - checkout

      # Check formatting
      - run:
          name: Check formatting
          command: |
            forge fmt --check

      # Run Forge tests (equivalent to the GitHub Action's forge test step)
      - run:
          name: Run Forge tests
          command: |
            forge test -vvv

workflows:
  version: 2

  sol-test-workflow:
    jobs:
      - foundry-check

  rust-test-workflow:
    jobs:
      - cargo-tests
