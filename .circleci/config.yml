version: 2.1


executors:
  default:
    docker:
      - image: us-docker.pkg.dev/oplabs-tools-artifacts/images/ci-builder:v0.47.3


# Define reusable commands
commands:
  install_rust_toolchain:
    steps:
      - run:
          name: Install Rust nightly
          command: |
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly
            source "$HOME/.cargo/env"

  install_foundry:
    steps:
      - run:
          name: Install Foundry
          command: |
            curl -L https://foundry.paradigm.xyz | bash
            echo 'export PATH="$PATH:/home/circleci/.foundry/bin"' >> $BASH_ENV
            source $BASH_ENV
            foundryup --version nightly

  install_just:
    steps:
      - run:
          name: Install just
          command: |
            curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin

jobs:
  init:
    docker:
      - image: cimg/rust:1.75
        environment:
          LIBCLANG_PATH: /usr/lib/llvm-14/lib
    environment:
      CARGO_TERM_COLOR: always
    steps:
      - checkout
      # Install LLVM and Clang
      - run:
          name: Install LLVM and Clang
          command: |
            sudo apt-get update
            sudo apt-get install -y llvm-14 libclang-14-dev clang-14
      - install_rust_toolchain
      - install_foundry
      - install_just
      - run:
          name: Generate testdata
          command: just testdata
      # Persist workspace for other jobs
      - persist_to_workspace:
          root: .
          paths:
            - .
            

  cargo-tests:
    docker:
      - image: cimg/rust:1.75
    environment:
      CARGO_TERM_COLOR: always
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - rust-cache-v1-{{ checksum "Cargo.lock" }}
            - rust-cache-v1-
      - run:
          name: Run fuzz tests
          command: cargo run --release -- -m 100 -t 4 --diff-count 50000
          no_output_timeout: 20m
      - run:
          name: Check formatting
          command: cargo fmt --all -- --check
      - run:
          name: Run clippy
          command: cargo clippy --workspace --all --locked -- -D warnings
      - run:
          name: Build project
          command: cargo build --workspace --all --locked
          no_output_timeout: 20m
      - save_cache:
          key: rust-cache-v1-{{ checksum "Cargo.lock" }}
          paths:
            - ~/.cargo
            - target
  

  foundry-check:
    executor: default
    environment:
      FOUNDRY_PROFILE: ci
    steps:
      - checkout

      # Check formatting
      - run:
          name: Check formatting
          command: |
            forge fmt --check

      # Run Forge tests (equivalent to the GitHub Action's forge test step)
      - run:
          name: Run Forge tests
          command: |
            forge test -vvv

workflows:
  version: 2

  sol-test-workflow:
    jobs:
      - foundry-check

  rust-test-workflow:
    jobs:
      - init
      - cargo-tests:
          requires:
            - init
